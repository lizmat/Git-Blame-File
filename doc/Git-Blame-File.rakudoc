=begin pod

=head1 NAME

Git::Blame::File - Who did what and when on a file in a Git repository

=head1 SYNOPSIS

=begin code :lang<raku>

use Git::Blame::File;

my $blamer = Git::Blame::File.new("xt/target");
say $blamer.lines[2];  # show line #3
# c64c97c3 (Elizabeth Mattijsen 2022-07-27 20:40:22 +0200 3) And this the third line

.say for Git::Blame::File.new("xt/target", :line-numbers(2,4)).lines
#c64c97c3 (Elizabeth Mattijsen 2022-07-27 20:40:22 +0200 2) This became the second line.
#77877dbc (Elizabeth Mattijsen 2022-07-27 20:39:29 +0200 4) This is the second line.

=end code

=head1 DESCRIPTION

Git::Blame::File is a module that uses C<git blame> to extract information
from a single file in a Git repository.  It processes the C<git blame>
information into C<Git::Blame::Line> objects, while also keeping track
of commits in C<Git::Blame::Commit> objects.

Stringifies to the filename specified.

=head1 METHODS ON Git::Blame::File

=head2 new

=begin code :lang<raku>

my $blamer = Git::Blame::File.new: "t/target";

=end code

The C<new> method either takes a single positional argument as the
filename or the C<IO::Path> object of which to obtain C<git blame>
information.

It can also be called with a C<:file> named argument, and an
optional C<:commits> argument.  The latter is intended for a future
C<Git::Blame::Repository> module that would potentially contain
all C<git blame> information of a repository.

Finally, it can also be called with an optional C<:line-numbers>
named argument, which should contain the line numbers (in ascending
order) of which to obtain blame information.  The C<.lines> method
will then iterate over the blame information of these line numbers.

=head2 lines

Returns an C<Array> with all the lines (as C<Git::Blame::Line> objects)
in the file.  Note that these are 0-based, whereas line numbers are
typically 1-based.

=begin code :lang<raku>

say $blamer.lines[2];  # show line #3
# c64c97c3 (Elizabeth Mattijsen 2022-07-27 20:40:22 +0200 3) And this the third line

=end code

=head2 authors

Returns a list of unique C<author>s of this file.

=head2 commits

Returns a C<Map> of all the commits that were seen for this file (and
potentially other files in the future.  Keyed to the C<sha1> of the
commit, and having a C<Git::Blame::Commit> object as a value.

=head2 created

Returns a C<DateTime> object when this file was created, according to
the oldest C<author-time> information.  Note that if no lines of the
first commit exist in the file, this may actually be later.

=head2 modified

Returns a C<DateTime> object when this file was last modified, according
to the newest C<committer-time> information.

=head2 file

The file from which the C<git blame> information was obtained.
 
=head1 ACCESSORS ON Git::Blame::Line

Note that C<Git::Blame::Line> objects are created automatically by
C<Git::Blame::File.new>.

=item author - the name of the author of this line
=item author-mail - the email address of the author of this line
=item author-time - a DateTime object for the authoring of this line
=item commit - the associated Git::Blame::Commit object
=item committed - whether this line has actually been committed
=item committer - the name of the committer of this line
=item committer-mail - the email address of the committer of this line
=item committer-time - a DateTime object for the committing of this line
=item filename - the current filename
=item line - the actual line currently
=item line-number - the current line-number
=item original-line-number - line number when this line was created
=item previous-sha1 - the full SHA1 of the previous commit of this line
=item previous-sha - the shortened SHA1 of the previous commit of this line
=item previous-filename - the filename in the previous commit of this line
=item sha1 - the full SHA1 of the commit to which this line belongs
=item sha - the shortened SHA1 of the commit to which this line belongs
=item summary - the first line of the commit message of this line

=head1 ACCESSORS ON Git::Blame::Commit

Note that C<Git::Blame::Commit> objects are created automatically by
C<Git::Blame::File.new>.

=item author - the name of the author of this commit
=item author-mail - the email address of the author of this commit
=item author-time - a DateTime object for the authoring of this commit
=item blames - a list of Git::Blame::Line objects of this commit
=item committed - whether it has actually been committed
=item committer - the name of the committer of this commit
=item committer-mail - the email address of the committer of this commit
=item committer-time - a DateTime object for the committing of this commit
=item previous-sha1 - the full SHA1 of the previous commit
=item previous-sha - the shortened SHA1 of the previous commit
=item previous-filename - the filename in the previous commit
=item sha1 - the full SHA1 of the commit
=item sha - the shortened SHA1 of the commit
=item summary - the first line of the commit message

=head1 AUTHORS

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/Git-Blame-File .
Comments and Pull Requests are welcome.

If you like this module, or what Iâ€™m doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2022, 2024, 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
